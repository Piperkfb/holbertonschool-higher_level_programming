Tests for valing a value

Function - integer_validator(self, name, value)

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

=========Successful Functions=========

>>> bg.integer_validator("my_int", 12)

>>> bg.integer_validator("width", 89)

=========intended Errors=========

------Running area()------

>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

------Value is not an integer------

>>> bg.integer_validator("name", "place")
Traceback (most recent call last):
TypeError: name must be an integer

------Value is <= 0------

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> bg.integer_validator("Distance", -4)
Traceback (most recent call last):
ValueError: Distance must be greater than 0

========Error Errors========

-----1 missing argument-----

>>> bg.integer_validator("age")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

-----2 missing arguments-----

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

-----Comma included-----

>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
TypeError: age must be an integer

-----True or False integer-----

>>> bg.integer_validator("age", True)
Traceback (most recent call last):
TypeError: age must be an integer

-----Tuple or list-----

>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
TypeError: age must be an integer

>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
TypeError: age must be an integer

------Value is None-----

>>> bg.integer_validator("age", None)
Traceback (most recent call last):
TypeError: age must be an integer


===END===
