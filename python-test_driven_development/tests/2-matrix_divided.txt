Intention: Write function that divides all elements of a mtrix

#matrix must be integers or floats
	typeerror 
#each row of matrixs must be same sized
	typeerror
#div must be integeror flolat
	typeerror
#div can't be 0
	zerodividionerror

#All elements must be divided by div, rounded to 2 decimalplaces

#Returns a new matrix

Function - matrix_divided(matrix, div):

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix = [
	...	[1, 2, 3],
	...	[4, 5, 6]
	... ]

=====Successful Functions=====

------Basic

>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

------Negative

>>> print(matrix_divided(matrix, -3))
[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

------Float

>>> print(matrix_divided(matrix, 0.5))
[[2.0, 4.0, 6.0], [8.0, 10.0, 12.0]]

=====Errors=====

------Division by Zero

>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero

------Row sizes are different

>>> matrix = [
...	[5, 63, 12],
...	[6, 3, 56, 42, 54]
... ]
>>> print(matrix_divided(matrix, 7.8))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

------

------Missing one argument

>>> matrix = [
...	[1, 2, 3],
...	[4, 5, 6]
... ]

    >>> print(matrix_divided(matrix, ))
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'
